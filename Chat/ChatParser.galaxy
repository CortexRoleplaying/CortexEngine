// Cortex SC2 Roleplaying Engine
// Copyright (C) 2009-2010 <http://www.cortexrp.com/>
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation; version 2 of the License.
// 
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

const int libcrtx_chat_recursion_limit = 50;

// Context
unitgroup[libcrtx_max_players] libcrtx_chat_current_context;

// Parse Lines:
// These commands are the basic, Cortex-supplied commands and language syntax.
// Ex: sp 3 marine; sp immortal; translates to two parse lines:
// @spawn 3 marine and
// @spawn immortal.

// Set the current parse line.
void libcrtx_chat_set_parse_line(int player, string s)
{
	libcrtx_chat_current_msg[player] = s;
}

// The current local parse line, in it's most basic form.
string libcrtx_chat_get_parse_line(int player)
{
	return libcrtx_chat_current_msg[player];
}

// Redirect a command to execute another command.
bool libcrtx_chat_parsechat(int lp_player, string lp_message, int lp_recursionLimit);
void libcrtx_chat_redirect_command(int player, string command, string params)
{
	libcrtx_chat_parsechat(player, command + " " + params, libcrtx_chat_recursion_limit);
}

// Set the current context of a command for a player
void libcrtx_chat_set_context(int player, unitgroup c)
{
	libcrtx_chat_current_context[player] = c;
}

unitgroup libcrtx_chat_get_context(int player)
{
	return libcrtx_enforce_unit_permissions(libcrtx_chat_current_context[player]);
}