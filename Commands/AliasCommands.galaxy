// Cortex SC2 Roleplaying Engine
// Copyright (C) 2009-2011 <http://www.cortexrp.com/>
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation; version 2 of the License.
// 
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

bool libcrtx_command_alias(bool checkConds, bool runActions)
{
	// Alias uses a subcommand tree. Woo!
	string parameter;
	string parameterTwo;
	int x;
	string subCommand = StringWord( libcrtx_chat_get_parse_line(EventPlayer()), 2 );
	if( subCommand == "create" ) {
		// create an alias!
		parameter = StringWord( libcrtx_chat_get_parse_line(EventPlayer()), 3 ); // the new command 
		x = 4;
		while( StringWord( libcrtx_chat_get_parse_line(EventPlayer()), x) != "" ) {
			parameterTwo = parameterTwo + StringWord( libcrtx_chat_get_parse_line(EventPlayer()), x) + " ";
			x = x + 1;
		}
		parameterTwo = libcrtx_trim_string(parameterTwo);

		if( parameterTwo == "alias" ) { // do not allow aliasing the alias command.
			return true;
		}

		if( libcrtx_alias_exists( parameter ) ) {
			return true;
		}

		libcrtx_alias_create( parameter, parameterTwo );
		return true;
	} else if ( subCommand == "remove" ) {
		// destroy an alias! oh noes.
		parameter = StringWord( libcrtx_chat_get_parse_line(EventPlayer()), 3); // the alias to remove.

		if( libcrtx_alias_exists(parameter) ) {
			libcrtx_write_success("Removed alias: " + parameter );
			libcrtx_alias_destroy(parameter);
		} else {
			libcrtx_write_error("No such alias.");
		}
	} else if( subCommand == "removeall" ) {
		libcrtx_alias_destroyall();
		libcrtx_write_success("All aliases have been removed.");
	} else if( subCommand == "list" ) {
		parameterTwo = libcrtx_alias_list();
		libcrtx_write(PlayerGroupSingle(EventPlayer()), parameterTwo);
	}
	return true;
}